package com.fidoarp.catalog.model;

import com.liferay.portal.LocaleException;
import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.model.BaseModel;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;

import java.io.Serializable;

import java.util.Locale;
import java.util.Map;

/**
 * The base model interface for the AppStatus service. Represents a row in the &quot;fido_app_status&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link com.fidoarp.catalog.model.impl.AppStatusModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link com.fidoarp.catalog.model.impl.AppStatusImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see AppStatus
 * @see com.fidoarp.catalog.model.impl.AppStatusImpl
 * @see com.fidoarp.catalog.model.impl.AppStatusModelImpl
 * @generated
 */
public interface AppStatusModel extends BaseModel<AppStatus> {
    /*
     * NOTE FOR DEVELOPERS:
     *
     * Never modify or reference this interface directly. All methods that expect a app status model instance should use the {@link AppStatus} interface instead.
     */

    /**
     * Returns the primary key of this app status.
     *
     * @return the primary key of this app status
     */
    public long getPrimaryKey();

    /**
     * Sets the primary key of this app status.
     *
     * @param primaryKey the primary key of this app status
     */
    public void setPrimaryKey(long primaryKey);

    /**
     * Returns the app status ID of this app status.
     *
     * @return the app status ID of this app status
     */
    public long getAppStatusId();

    /**
     * Sets the app status ID of this app status.
     *
     * @param appStatusId the app status ID of this app status
     */
    public void setAppStatusId(long appStatusId);

    /**
     * Returns the app status code of this app status.
     *
     * @return the app status code of this app status
     */
    @AutoEscape
    public String getAppStatusCode();

    /**
     * Sets the app status code of this app status.
     *
     * @param appStatusCode the app status code of this app status
     */
    public void setAppStatusCode(String appStatusCode);

    /**
     * Returns the name of this app status.
     *
     * @return the name of this app status
     */
    public String getName();

    /**
     * Returns the localized name of this app status in the language. Uses the default language if no localization exists for the requested language.
     *
     * @param locale the locale of the language
     * @return the localized name of this app status
     */
    @AutoEscape
    public String getName(Locale locale);

    /**
     * Returns the localized name of this app status in the language, optionally using the default language if no localization exists for the requested language.
     *
     * @param locale the local of the language
     * @param useDefault whether to use the default language if no localization exists for the requested language
     * @return the localized name of this app status. If <code>useDefault</code> is <code>false</code> and no localization exists for the requested language, an empty string will be returned.
     */
    @AutoEscape
    public String getName(Locale locale, boolean useDefault);

    /**
     * Returns the localized name of this app status in the language. Uses the default language if no localization exists for the requested language.
     *
     * @param languageId the ID of the language
     * @return the localized name of this app status
     */
    @AutoEscape
    public String getName(String languageId);

    /**
     * Returns the localized name of this app status in the language, optionally using the default language if no localization exists for the requested language.
     *
     * @param languageId the ID of the language
     * @param useDefault whether to use the default language if no localization exists for the requested language
     * @return the localized name of this app status
     */
    @AutoEscape
    public String getName(String languageId, boolean useDefault);

    @AutoEscape
    public String getNameCurrentLanguageId();

    @AutoEscape
    public String getNameCurrentValue();

    /**
     * Returns a map of the locales and localized names of this app status.
     *
     * @return the locales and localized names of this app status
     */
    public Map<Locale, String> getNameMap();

    /**
     * Sets the name of this app status.
     *
     * @param name the name of this app status
     */
    public void setName(String name);

    /**
     * Sets the localized name of this app status in the language.
     *
     * @param name the localized name of this app status
     * @param locale the locale of the language
     */
    public void setName(String name, Locale locale);

    /**
     * Sets the localized name of this app status in the language, and sets the default locale.
     *
     * @param name the localized name of this app status
     * @param locale the locale of the language
     * @param defaultLocale the default locale
     */
    public void setName(String name, Locale locale, Locale defaultLocale);

    public void setNameCurrentLanguageId(String languageId);

    /**
     * Sets the localized names of this app status from the map of locales and localized names.
     *
     * @param nameMap the locales and localized names of this app status
     */
    public void setNameMap(Map<Locale, String> nameMap);

    /**
     * Sets the localized names of this app status from the map of locales and localized names, and sets the default locale.
     *
     * @param nameMap the locales and localized names of this app status
     * @param defaultLocale the default locale
     */
    public void setNameMap(Map<Locale, String> nameMap, Locale defaultLocale);

    /**
     * Returns the description of this app status.
     *
     * @return the description of this app status
     */
    @AutoEscape
    public String getDescription();

    /**
     * Sets the description of this app status.
     *
     * @param description the description of this app status
     */
    public void setDescription(String description);

    public boolean isNew();

    public void setNew(boolean n);

    public boolean isCachedModel();

    public void setCachedModel(boolean cachedModel);

    public boolean isEscapedModel();

    public Serializable getPrimaryKeyObj();

    public void setPrimaryKeyObj(Serializable primaryKeyObj);

    public ExpandoBridge getExpandoBridge();

    public void setExpandoBridgeAttributes(ServiceContext serviceContext);

    public void prepareLocalizedFieldsForImport(Locale defaultImportLocale)
        throws LocaleException;

    public Object clone();

    public int compareTo(AppStatus appStatus);

    public int hashCode();

    public CacheModel<AppStatus> toCacheModel();

    public AppStatus toEscapedModel();

    public String toString();

    public String toXmlString();
}
